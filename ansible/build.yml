---
- name: Build infrastructure
  hosts: localhost
  connection: local
  vars_files:
    - vars/main.yml
  vars:
    tfvars:
      hcloud_token: "{{ terraform_var_hcloud_token }}"
      bastion_username: "{{ terraform_var_bastion_username }}"
      ssh_key_name: "{{ terraform_var_ssh_key_name }}"
      network_ip_range: "{{ terraform_var_network_ip_range }}"
      subnet_ip_range: "{{ terraform_var_subnet_ip_range }}"
      loadbalancer_count: "{{ terraform_var_loadbalancer_count }}"
      server_node_count: "{{ terraform_var_server_node_count }}"
      client_node_count: "{{ terraform_var_client_node_count }}"

  tasks:
    - block:
        - name: Get hcloud token from user
          pause:
            prompt: "Enter your Hetzner Cloud API Token"
            echo: no
          register: __hcloud_token
        - name: set hcloud token fact
          set_fact:
            terraform_var_hcloud_token: "{{ __hcloud_token }}"
      when: terraform_var_hcloud_token == ""
      no_log: true

    - assert:
        that: terraform_var_hcloud_token != ""
        fail_msg: "No Hetzner Cloud API token provided"

    - block:
        - name: Get hcloud SSH key name from user
          pause:
            prompt: "Enter your Hetzner Cloud SSH key name"
          register: __hcloud_ssh_key_name
        - name: set hcloud ssh key name fact
          set_fact:
            terraform_var_ssh_key_name: "{{ __hcloud_ssh_key_name }}"
      when: terraform_var_ssh_key_name == ""

    - assert:
        that: terraform_var_ssh_key_name != ""
        fail_msg: "No Hetzner Cloud SSH key name provided"

    - name: Deploy infrastructure with terraform
      community.general.terraform:
        overwrite_init: no
        force_init: yes
        project_path: "{{ terraform_project_dir }}"
        state: present
        variables: "{{ tfvars }}"

    - name: Create tfvars file
      ansible.builtin.copy:
        content: "{{ tfvars | to_nice_json }}"
        dest: "{{ terraform_project_dir }}/terraform.tfvars.json"

    - name: Update inventory with inventory created by terraform
      ansible.builtin.meta: refresh_inventory

- import_playbook: provision.yml
