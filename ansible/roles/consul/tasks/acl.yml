---
# using this to make sure the server is running and healthy
# idk if the leader will ever be needed
- name: Find consul RAFT leader while checking cluster health
  become: false
  ansible.builtin.uri:
    url: "https://{{ consul_first_server_ip }}:8501/v1/status/leader"
    ca_path:  "{{ consul_certs_dir }}/consul_ca_cert.pem"
    client_key: "{{ consul_certs_dir }}/consul_client_tls_key.pem"
    client_cert: "{{ consul_certs_dir }}/consul_client_tls_cert.pem"
    return_content: yes
  register: consul_leader
  until: (consul_leader.json is defined) and (consul_leader.json != '')
  retries: 20
  delay: 6
  run_once: true

- name: Create consul policy for DNS resolving
  become: false
  ansible.builtin.uri:
    method: PUT
    url: "https://{{ consul_first_server_ip }}:8501/v1/acl/policy"
    ca_path:  "{{ consul_certs_dir }}/consul_ca_cert.pem"
    client_key: "{{ consul_certs_dir }}/consul_client_tls_key.pem"
    client_cert: "{{ consul_certs_dir }}/consul_client_tls_cert.pem"
    return_content: yes
    headers:
      X-Consul-Token: "{{ consul_acl_bootstrap_token }}"
    body_format: json
    body:
      Name: dns-policy
      Description: "Policy to allow DNS lookups from the node serving DNS requests"
      Rules: |
        node_prefix "" {
          policy = "read"
        }
        service_prefix "" {
          policy = "read"
        }
  register: consul_dns_policy
  run_once: true

- name: Create ACL token for consul_{{ node_id }}
  become: false
  ansible.builtin.uri:
    method: PUT
    url: "https://{{ consul_first_server_ip }}:8501/v1/acl/token"
    ca_path:  "{{ consul_certs_dir }}/consul_ca_cert.pem"
    client_key: "{{ consul_certs_dir }}/consul_client_tls_key.pem"
    client_cert: "{{ consul_certs_dir }}/consul_client_tls_cert.pem"
    headers:
      X-Consul-Token: "{{ consul_acl_bootstrap_token }}"
    body_format: json
    body:
      SecretID: "{{ consul_acl_client_token }}"
      Description: "ACL token for consul_{{ node_id }}"
      Policies:
        - ID: "{{ consul_dns_policy.json.ID }}"
      NodeIdentities:
        - NodeName: "consul_{{ node_id }}"
          Datacenter: "{{ consul_datacenter }}"
