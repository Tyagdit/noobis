---
# using this to make sure the server is running and healthy
# idk if the leader will ever be needed but it's handy to have
- name: Find nomad RAFT leader while checking cluster health
  ansible.builtin.uri:
    url: "https://{{ nomad_first_server_ip }}:4646/v1/status/leader"
    ca_path:  "{{ nomad_certs_dir }}/nomad_ca_cert.pem"
    client_key: "{{ nomad_certs_dir }}/nomad_client_tls_key.pem"
    client_cert: "{{ nomad_certs_dir }}/nomad_client_tls_cert.pem"
    return_content: yes
  register: nomad_leader
  until: (nomad_leader.json is defined) and (nomad_leader.json != '')
  retries: 20
  delay: 6

- name: Parse caddy jobspec HCL
  ansible.builtin.uri:
    method: POST
    url: "https://{{ nomad_first_server_ip }}:4646/v1/jobs/parse"
    ca_path:  "{{ nomad_certs_dir }}/nomad_ca_cert.pem"
    client_key: "{{ nomad_certs_dir }}/nomad_client_tls_key.pem"
    client_cert: "{{ nomad_certs_dir }}/nomad_client_tls_cert.pem"
    return_content: yes
    body_format: json
    body:
      Canonicalize: true
      JobHCL: "{{ lookup('ansible.builtin.template', 'caddy.nomad.j2') }}"
  register: caddy_job_json

- name: Run caddy job from parsed JSON jobspec
  ansible.builtin.uri:
    method: POST
    url: "https://{{ nomad_first_server_ip }}:4646/v1/jobs"
    ca_path:  "{{ nomad_certs_dir }}/nomad_ca_cert.pem"
    client_key: "{{ nomad_certs_dir }}/nomad_client_tls_key.pem"
    client_cert: "{{ nomad_certs_dir }}/nomad_client_tls_cert.pem"
    return_content: yes
    body_format: json
    body:
      Job: "{{ caddy_job_json.json }}"
