#### General
node_name   = "consul_{{ node_id }}"
# TODO: see if these addresses need changing
client_addr = "0.0.0.0"
bind_addr   = "{{ hostvars[inventory_hostname]['ansible_host'] | default(inventory_hostname) }}"
server      = true
ui_config {
  enabled = true
}

#### Connection
ports {
  http      = 8500
  https     = 8501
  # https://github.com/hashicorp/nomad/issues/15266
  # https://github.com/hashicorp/nomad/issues/15360
  grpc      = 8502
  #grpc_tls  = 8503
}

bootstrap_expect = {{ consul_server_count }}

# join the other server nodes
retry_join = [
{% for host in groups['servers'] %}
{% if host != inventory_hostname %}
  "{{ hostvars[host]['ansible_host'] | default(host) }}",
{% endif %}
{% endfor %}
]

#### Security
encrypt = "{{ consul_gossip_encrypt_key }}"

tls {
  defaults {
    key_file        = "{{ consul_certs_dir }}/consul_server_tls_key.pem"
    cert_file       = "{{ consul_certs_dir }}/consul_server_tls_cert.pem"
    ca_file         = "{{ consul_certs_dir }}/consul_ca_cert.pem"
    verify_incoming = true
    verify_outgoing = true
  }

  grpc {
    # TLS over gRPC doesn't work with envoy since envoy doesn't use the consul
    # client's certs because that is just for consul's internal communication
    # which causes consul to reject communication attempted by envoy if 'verify_incoming'
    # is true, for more info see: https://github.com/hashicorp/consul/issues/13088
    verify_incoming = false
  }

  internal_rpc {
    verify_server_hostname = true
  }
}

acl {
  enabled                  = true
  default_policy           = "deny"
  enable_token_persistence = true

  tokens {
    initial_management = "{{ consul_acl_bootstrap_token }}"
    default            = "{{ consul_acl_bootstrap_token }}"
  }
}

## Connect Service Mesh
connect {
  enabled = true
  # TODO: all the agents are set up to use manually generated
  # certs so I think this part is unnecessary, idk tho
  # ca_provider = "consul"
  # ca_config {
  #   # ...
  # }
}

config_entries {
  bootstrap = [
    {
      kind = "proxy-defaults"
      name = "global"
      config {
        protocol = "http"
        envoy_prometheus_bind_addr = "0.0.0.0:{{ consul_proxy_metrics_port }}"
      }
    },
  }
}

telemetry {
  prometheus_retention_time = "{{ consul_prometheus_retention_time }}"
  # disable_hostname          = true
}
