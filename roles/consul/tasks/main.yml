---
- name: Create consul system group
  ansible.builtin.group:
    name: consul
    state: present
    system: true

- name: Create consul system user
  ansible.builtin.user:
    name: consul
    group: consul
    shell: "/usr/sbin/nologin"
    system: true
    create_home: false

- name: Install Consul
  ansible.builtin.unarchive:
    dest: "/usr/bin/"
    src: "{{ consul_binary_url }}"
    mode: 0755
    remote_src: true
  when: not ansible_check_mode

- name: Ensure Consul config, data and certs dir exist
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: consul
    group: consul
  loop:
    - "{{ consul_config_dir }}"
    - "{{ consul_data_dir }}"
    - "{{ consul_certs_dir }}"

- name: Add Consul configurations
  ansible.builtin.template:
    dest: "{{ consul_config_dir }}/{{ item.dest }}"
    src: "{{ item.src }}"
    owner: consul
    group: consul
  loop:
    - src: "consul.hcl.j2"
      dest: "consul.hcl"
    - src: "{{ node_type }}.hcl.j2"
      dest: "{{ node_type }}.hcl"
  ignore_errors: "{{ ansible_check_mode }}"

- name: Copy consul CA cert over
  ansible.builtin.copy:
    dest: "{{ consul_certs_dir }}/consul_ca_cert.pem"
    src: "{{ local_temp_certs_dir }}/consul_ca_cert.pem"
    owner: consul
    group: consul
  ignore_errors: "{{ ansible_check_mode }}"

- name: Create {{ node_type }} TLS key and cert
  include_tasks: tls.yml

- name: Set up client ACL and DNS
  when: node_type == "client"
  block:
    - name: Create client ACL token
      include_tasks: acl.yml
      when: not ansible_check_mode
    - name: Setup DNS forwarding on client
      include_tasks: dns.yml

- name: Copy consul systemd service
  ansible.builtin.template:
    dest: "/etc/systemd/system/consul.service"
    src: "consul.service.j2"

- name: Start Consul and ensure it starts on boot
  ansible.builtin.service:
    name: consul.service
    enabled: true
    state: started
  ignore_errors: "{{ ansible_check_mode }}"
