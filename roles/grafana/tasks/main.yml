---
- name: Create grafana system group
  ansible.builtin.group:
    name: grafana
    state: present
    system: true

- name: Create grafana system user
  ansible.builtin.user:
    name: grafana
    group: grafana
    groups: caddy
    append: true
    shell: "/usr/sbin/nologin"
    system: true
    create_home: false

- name: Install dependencies
  ansible.builtin.apt:
    name:
      - xz-utils
      - adduser
      - libfontconfig1
    state: latest
    update_cache: true

- name: Install grafana
  ansible.builtin.apt:
    update_cache: true
    deb: "https://dl.grafana.com/oss/release/grafana_{{ grafana_version }}_amd64.deb"
  ignore_errors: "{{ ansible_check_mode }}"

- name: Ensure grafana config, provisioning and dashboard dirs exist
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: grafana
    group: grafana
  loop:
    - "{{ grafana_config_dir }}"
    - "{{ grafana_dashboards_dir }}"
    - "{{ grafana_provisioning_dir }}"
    - "{{ grafana_provisioning_dir }}/datasources"
    - "{{ grafana_provisioning_dir }}/dashboards"
    - "{{ grafana_data_dir }}"
    - "{{ grafana_logs_dir }}"
    - "{{ grafana_plugins_dir }}"

- name: Add grafana config
  ansible.builtin.template:
    dest: "{{ grafana_config_dir }}/grafana.ini"
    src: "grafana.ini.j2"
    owner: grafana
    group: grafana
  ignore_errors: "{{ ansible_check_mode }}"

- name: Add grafana provisioning configs
  ansible.builtin.template:
    dest: "{{ grafana_provisioning_dir }}/{{ item.dest }}"
    src: "{{ item.src }}"
    owner: grafana
    group: grafana
  loop:
    - src: grafana-datasources.yml.j2
      dest: datasources/datasources.yml
    - src: grafana-dashboards.yml.j2
      dest: dashboards/dashboards.yml
  ignore_errors: "{{ ansible_check_mode }}"

- name: Add grafana dashboards
  ansible.builtin.get_url:
    url: "https://grafana.com/api/dashboards/{{ item.id }}/revisions/{{ item.rev }}/download"
    dest: "{{ grafana_dashboards_dir }}/{{ item.name }}"
    force: false
    owner: grafana
    group: grafana
  loop:
    - id: 1860
      rev: 29
      name: node-exporters.json
    - id: 3662
      rev: 2
      name: prometheus.json
    - id: 10642
      rev: 1
      name: consul-servers.json
    - id: 15859
      rev: 2
      name: consul-mesh.json
    - id: 16923
      rev: 1
      name: nomad-clients.json
    - id: 16924
      rev: 1
      name: nomad-servers.json
    - id: 16925
      rev: 1
      name: nomad-allocs.json
  ignore_errors: "{{ ansible_check_mode }}"

# https://github.com/grafana/grafana/issues/10786
# doesn't work with the community.grafana.grafana_dashboard module either
- name: Fix datasources in the dashboard jsons
  ansible.builtin.replace:
    path: "{{ grafana_dashboards_dir }}/{{ item.file }}"
    regexp: "{{ item.regexp }}"
    replace: "{{ item.replace }}"
  loop:
    - file: node-exporters.json
      regexp: '"uid": "\${DS_PROMETHEUS}"'
      replace: '"uid": "Prometheus"'
    - file: prometheus.json
      regexp: '"datasource": "\${DS_THEMIS}"'
      replace: '"datasource": "Prometheus"'
    - file: consul-servers.json
      regexp: '"datasource": "\${DS_PROMETHEUS}"'
      replace: '"datasource": "Prometheus"'
    - file: consul-mesh.json
      regexp: '"uid": "\${DS_THANOS-MASTER}"'
      replace: '"uid": "Prometheus"'
    - file: nomad-clients.json
      regexp: '"uid": "\${DS_PROMETHEUS}"'
      replace: '"uid": "Prometheus"'
    - file: nomad-servers.json
      regexp: '"uid": "\${DS_PROMETHEUS}"'
      replace: '"uid": "Prometheus"'
    - file: nomad-allocs.json
      regexp: '"uid": "\${DS_PROMETHEUS}"'
      replace: '"uid": "Prometheus"'
  ignore_errors: "{{ ansible_check_mode }}"

# this is a modified version of the dashboard used
# by grafana cloud's caddy integration in that this
# one actually works (for now)
# found using https://play.grafana.org/dashboards
- name: Add caddy dashboard
  ansible.builtin.copy:
    dest: "{{ grafana_dashboards_dir }}/caddy.json"
    src: caddy.json
    owner: grafana
    group: grafana

- name: Copy grafana systemd service
  ansible.builtin.template:
    dest: "/etc/systemd/system/grafana-server.service"
    src: "grafana-server.service.j2"

- name: Start grafana and ensure it starts on boot
  ansible.builtin.service:
    name: grafana-server.service
    enabled: true
    state: started
  ignore_errors: "{{ ansible_check_mode }}"
